# Escreva um programa que fa√ßa o "Computador Pensar um numero ramdomicamente" entre 0 e 99 e que pe√ßa para o usuario entar descobrir qual foi o numero que o computador escolheu. O programa devera escrever na tela se o usuario acertou ou n√£o o numero.

import random

# Gera um n√∫mero aleat√≥rio entre 0 e 99
numero_aleatorio = random.randint(0, 99)

# Pede para o usu√°rio adivinhar o n√∫mero
numero_escolhido = int(input("Digite um n√∫mero entre 0 e 99: "))

# Verifica se o usu√°rio acertou o n√∫mero
if numero_escolhido == numero_aleatorio:
    print("Voc√™ acertou o n√∫mero!")
else:
    print("Voc√™ errou o n√∫mero!")
    print("O n√∫mero correto era", numero_aleatorio)
    print("Tente novamente!")

input()

# ______________________________________________________________________________________________________________________________________

# Escreva um programa que leia a velocidade de um carro, se ultrapassar a velocidade de 80km/h ele vai mostrar uma menssagem dizendo que ele foi multado, sen√£o, a multa vai custar R$100 por cada 10km fora do limite, com agravante de 30% caso passe de 110k,/h.

# Leitura da velocidade do carro
velocidade = float(input("Informe a velocidade do carro (km/h): "))
# Defini√ß√£o da velocidade limite
velocidade_limite = 80
# C√°lculo da multa
if velocidade <= velocidade_limite:
    print("Tudo certo! N√£o h√° multas.")
else:
    # C√°lculo da multa base
    excesso_velocidade = velocidade - velocidade_limite
    multa_base = (excesso_velocidade // 10) * 100  # C√°lculo da multa por cada 10km/h acima do limite
    # Aplica√ß√£o do agravante, se necess√°rio
    if velocidade > 110:
        multa_base *= 1.3  # Aumento de 30% na multa

    print(f"Voc√™ foi multado! O valor da multa √© de R$ {multa_base:.2f}.")

""" Neste programa, o usu√°rio insere a velocidade do carro, e o programa verifica se essa velocidade est√° acima do limite de 80 km/h. Se estiver, calcula o valor da multa com base em quantos blocos de 10 km/h o carro est√° acima do limite e aplica um agravante de 30% se a velocidade for maior que 110 km/h. Se a velocidade n√£o estiver acima do limite, o programa informa que n√£o h√° multa. """

# ______________________________________________________________________________________________________________________________________

def calcular_multa(velocidade):
    if velocidade <= 80:
        return "Voc√™ n√£o foi multado."
    else:
        multa_base = (velocidade - 80) // 10 * 100
        if velocidade > 110:
            multa_base *= 1.3
        return f"Voc√™ foi multado. O valor da multa √© R${multa_base:.2f}."

velocidade = float(input("Digite a velocidade do carro em km/h: "))
print(calcular_multa(velocidade))

"""Este programa pede ao usu√°rio para inserir a velocidade do carro. Se a velocidade for menor ou igual a 80 km/h, o programa informa que o usu√°rio n√£o foi multado. Se a velocidade for maior que 80 km/h, o programa calcula o valor da multa com base na velocidade excedida. Se a velocidade for maior que 110 km/h, um agravante de 30% √© aplicado √† multa. O valor da multa √© ent√£o exibido para o usu√°rio. Por favor, note que este √© um exemplo simplificado e pode n√£o refletir as regras de tr√¢nsito reais. Sempre dirija com seguran√ßa e respeite os limites de velocidade. üöóüí®"""

# ______________________________________________________________________________________________________________________________________

# Crie um programa que mostre na tela se o numero digitado pelo usuario √© par ou impar se ele √© negativo ou positivo se ele √© primo ou n√£o primo.

numero = int(input("Digite um n√∫mero: "))

# Verifica se o n√∫mero √© par ou impar
if numero % 2 == 0:
    print("O n√∫mero √© par.")
else:
    print("O n√∫mero √© impar.")
# Verifica se 
    if numero < 0:
        print("O n√∫mero √© negativo.")
    else:
        print("O n√∫mero √© positivo.")
# Verifica se o n√∫mero √© primo
if numero == 2:
    print("O n√∫mero √© primo.")
elif numero % 2 == 0 or numero % 3 == 0:
    print("O n√∫mero n√£o √© primo.")
else:
    for i in range(5, int(numero ** 0.5) + 1, 2):
        if numero % i == 0:
            print("O n√∫mero n√£o √© primo.")
            break
    else:
        print("O n√∫mero √© primo.")

input()

""" Este programa pede ao usu√°rio para digitar um n√∫mero e, em seguida, verifica se o n√∫mero √© par ou impar, negativo ou positivo, e primo ou n√£o primo. Se o n√∫mero for par, o programa imprime "O n√∫mero √© par". Se o n√∫mero for impar, o programa imprime "O n√∫mero √© impar". Se o n√∫mero for negativo, o programa imprime "O n√∫mero √© negativo". Se o n√∫mero for positivo, o programa imprime "O n√∫mero √© positivo". Se o n√∫mero for primo, o programa imprime "O n√∫mero √© primo". Se o n√∫mero n√£o for primo, o programa imprime "O n√∫mero n√£o √© primo". """

# ______________________________________________________________________________________________________________________________________


def calcular_imc(peso, altura):
    imc = peso / (altura ** 2)
    return imc

peso = float(input("Digite seu peso em kg: "))
altura = float(input("Digite sua altura em metros: "))
imc = calcular_imc(peso, altura)

if imc < 18.5:
    print("Voc√™ est√° abaixo do peso ideal.")
elif imc >= 18.5 and imc < 25:
    print("Voc√™ est√° no peso ideal.")
elif imc >= 25 and imc < 30:
    print("Voc√™ est√° com sobrepeso.")
elif imc >= 30 and imc < 35:
    print("Voc√™ est√° com obesidade grau I.")
elif imc >= 35 and imc < 40:
    print("Voc√™ est√° com obesidade grau II.")
else:
    print("Voc√™ est√° com obesidade grau III.")

input()

""" Este programa calcula o IMC (√çndice de Massa Corporal) do usu√°rio e, em seguida, informa se o usu√°rio est√° abaixo do peso ideal, no peso ideal, com sobrepeso, com obesidade grau I, com obesidade grau II ou com obesidade grau III. O IMC √© calculado dividindo o peso do usu√°rio em kg pela altura do usu√°rio em metros ao quadrado. """

# ______________________________________________________________________________________________________________________________________

# Crie um programa que desenvolte uma solu√ßao de distancia de uma viagem em KM. Caucule o pre√ßo da passagem, cobrando R$0,50 por km e para viagens at√© 200km o valor √© reduzido √° R$0,40. Mas se for maior que 200km passa a ser R$0,60 por km exedido aos 200km.

distancia = float(input("Digite a dist√¢ncia da viagem em km: "))

if distancia <= 200:
    preco = distancia * 0.50
else:
    preco = 200 * 0.50 + (distancia - 200) * 0.60

print(f"O pre√ßo da passagem √© R$ {preco:.2f}.")

input()

""" Este programa pede ao usu√°rio para digitar a dist√¢ncia da viagem em km e, em seguida, calcula o pre√ßo da passagemgem. O pre√ßo da passagem √© calculado multiplicando a dist√¢ncia da viagem pelo pre√ßo por km. Se a dist√¢ncia da viagem for menor ou igual a 200 km, o pre√ßo por km √© de R$ 0,50. Se a dist√¢ncia da viagem for maior que 200 km, o pre√ßo por km √© de R$ 0,40 para os primeiros 200 km e R$ 0,60 para cada km excedido aos 200 km. """


def calcular_preco_passagem(distancia):
    # Defini√ß√£o dos pre√ßos por km
    preco_ate_200km = 0.40
    preco_acima_200km_base = 0.50  # Para os primeiros 200 km
    preco_acima_200km_excedido = 0.60  # Para km excedidos ap√≥s 200 km
    # C√°lculo do pre√ßo da passagem
    if distancia <= 200:
        preco_passagem = distancia * preco_ate_200km
    else:
        # Calcula o pre√ßo dos primeiros 200 km e o excedente separadamente
        preco_passagem = 200 * preco_acima_200km_base + (distancia - 200) * preco_acima_200km_excedido

    return preco_passagem
# Leitura da dist√¢ncia da viagem em km
distancia_viagem = float(input("Informe a dist√¢ncia da viagem em km: "))
# C√°lculo do pre√ßo da passagem
preco_passagem = calcular_preco_passagem(distancia_viagem)
# Exibi√ß√£o do resultado
print(f"O pre√ßo da passagem para uma viagem de {distancia_viagem} km √© de R$ {preco_passagem:.2f}.")


""" Este programa define uma fun√ß√£o calcular_preco_passagem(distancia) que recebe a dist√¢ncia da viagem como argumento e retorna o pre√ßo da passagem de acordo com as regras especificadas. Em seguida, o programa l√™ a dist√¢ncia da viagem fornecida pelo usu√°rio, calcula o pre√ßo da passagem usando a fun√ß√£o definida e exibe o resultado formatado."""

def calcular_preco_passagem(distancia):
    if distancia <= 200:
        preco = distancia * 0.40
    else:
        preco = 200 * 0.40 + (distancia - 200) * 0.60
    return f"O pre√ßo da passagem √© R${preco:.2f}."

distancia = float(input("Digite a dist√¢ncia da viagem em km: "))
print(calcular_preco_passagem(distancia))

""" Este programa pede ao usu√°rio para inserir a dist√¢ncia da viagem. Se a dist√¢ncia for menor ou igual a 200 km, o programa calcula o pre√ßo da passagem a R$0,40 por km. Se a dist√¢ncia for maior que 200 km, o programa calcula os primeiros 200 km a R$0,40 por km e o restante a R$0,60 por km. O pre√ßo da passagem √© ent√£o exibido para o usu√°rio. Por favor, note que este √© um exemplo simplificado e pode n√£o refletir as tarifas reais de viagem. Sempre verifique as tarifas atuais antes de viajar. üöåüí® """
    
# ______________________________________________________________________________________________________________________________________

# Fa√ßa um programa que leia o ano de aniverssario do usuario, e mostre na tela se o ano √© bixesto ou n√£o.

ano = int(input("Digite o ano do seu anivers√°rio: "))

if ano % 4 == 0:
    if ano % 100 == 0:
        if ano % 400 == 0:
            print("O ano √© bissexto.")
        else:
             print("O ano n√£o √© bissexto.")
    else:
        print("O ano √© bissexto.")
else:
    print("O ano √© bissexto.")

input()

""" Este programa pede ao usu√°rio para digitar o ano do seu anivers√°rio e, em seguida, verifica se o ano √© bissexto ou n√£o. Um ano √© bissexto se for divis√≠vel por 4, mas n√£o por 100, a menos que tamb√©m seja divis√≠vel por 400 """

def verificar_ano_bissexto(ano):
    # Um ano √© bissexto se for divis√≠vel por 4, exceto se for divis√≠vel por 100,
    # a menos que seja divis√≠vel por 400.
    if (ano % 4 == 0 and ano % 100 != 0) or (ano % 400 == 0):
        return True
    else:
        return False
# Leitura do ano de anivers√°rio do usu√°rio
ano_aniversario = int(input("Informe o ano do seu anivers√°rio: "))
# Verifica√ß√£o se o ano √© bissexto
if verificar_ano_bissexto(ano_aniversario):
    print(f"O ano {ano_aniversario} √© bissexto.")
else:
    print(f"O ano {ano_aniversario} n√£o √© bissexto.")

"""Este programa define uma fun√ß√£o verificar_ano_bissexto(ano), que recebe um ano como argumento e retorna True se o ano for bissexto, seguindo as regras para anos bissextos. Ap√≥s isso, o programa solicita ao usu√°rio que informe o ano de seu anivers√°rio, utiliza a fun√ß√£o para verificar se este ano √© bissexto e exibe o resultado apropriado."""

def verificar_ano_bissexto(ano):
    if (ano % 4 == 0 and ano % 100 != 0) or (ano % 400 == 0):
        return f"O ano {ano} √© bissexto."
    else:
        return f"O ano {ano} n√£o √© bissexto."

ano = int(input("Digite o ano do seu anivers√°rio: "))
print(verificar_ano_bissexto(ano))


""" Este programa pede ao usu√°rio para inserir o ano do seu anivers√°rio. Em seguida, verifica se o ano √© bissexto ou n√£o. Um ano √© bissexto se for divis√≠vel por 4, mas n√£o por 100, a menos que tamb√©m seja divis√≠vel por 400. O resultado √© ent√£o exibido para o usu√°rio. Por favor, note que este √© um exemplo simplificado e pode n√£o refletir todas as regras para determinar anos bissextos. üìÖ """

# ______________________________________________________________________________________________________________________________________

# Fa√ßa um programa que leia cinco numeros, mostre qual √© o maior e qual √© o menor entre os 5 numeros digitados pelo usuario na tela.

numeros = []

for i in range(5):
    numero = int(input("Digite um n√∫mero: "))
    numeros.append(numero)

maior_numero = max(numeros)
menor_numero = min(numeros)

print(f"O maior n√∫mero √© {maior_numero}.")
print(f"O menor n√∫mero √© {menor_numero}.")

input()

""" Este programa pede ao usu√°rio para digitar cinco n√∫meros e, em seguida, mostra qual √© o maior e qual √© o menor entre os n√∫meros digitados. O programa utiliza as fun√ß√µes max() e min() para encontrar o maior e o menor n√∫mero, respectivamente. """

print("Digite cinco n√∫meros:")
# Inicializa as vari√°veis maximo e minimo com valores None para posterior compara√ß√£o
maximo = None
minimo = None

for i in range(1, 6):
    numero = float(input(f"N√∫mero {i}: "))
    if maximo is None or numero > maximo:
        maximo = numero
    if minimo is None or numero < minimo:
        minimo = numero

print(f"O maior n√∫mero digitado foi {maximo}.")
print(f"O menor n√∫mero digitado foi {minimo}.")

""" Neste programa:

-   Solicita-se ao usu√°rio que digite cinco n√∫meros, um de cada vez.

-   A cada n√∫mero digitado, o programa compara o n√∫mero com os valores atualmente armazenados nas vari√°veis maximo e minimo.

-   Se o n√∫mero digitado for maior que o valor atual de maximo, ou se maximo ainda n√£o tiver sido definido (None), o programa atualiza maximo com o valor desse n√∫mero.

-   Se o n√∫mero digitado for menor que o valor atual de minimo, ou se minimo ainda n√£o tiver sido definido (None), o programa atualiza minimo com o valor desse n√∫mero.

-   Ap√≥s todos os cinco n√∫meros serem lidos e comparados, o programa exibe o maior e o menor n√∫mero digitado pelo usu√°rio. """


# Inicializa as vari√°veis para armazenar o maior e o menor n√∫mero
maior = float('-inf')
menor = float('inf')
# Loop para ler os cinco n√∫meros
for i in range(5):
    numero = float(input(f"Digite o {i+1}¬∫ n√∫mero: "))
    # Atualiza o maior e o menor n√∫mero, se necess√°rio
    if numero > maior:
        maior = numero
    if numero < menor:
        menor = numero
# Mostra o maior e o menor n√∫mero
print(f"O maior n√∫mero √©: {maior}")
print(f"O menor n√∫mero √©: {menor}")

""" Esse programa solicitar√° que o usu√°rio insira cinco n√∫meros e, em seguida, exibir√° qual √© o maior e qual √© o menor n√∫mero entre os cinco digitados. Espero que isso ajude! """

# Escreva um programa que pergunte o salario de um funcionario e caucule o valor de seu aumento. Para salarios superiores a R$1.300 caucule um aumento de 10%. Para valores inferiores a R$1.300 fa√ßa um aumento de 20%.

salario = float(input("Digite o seu sal√°rio: "))

if salario > 1300:
    aumento = salario * 0.10
else:
    aumento = salario * 0.20

novo_salario = salario + aumento
print(f"O seu novo sal√°rio √© de R$ {novo_salario:.2f}.")

input()

""" Este programa pede ao usu√°rio para digitar seu sal√°rio e, em seguida, calcula o valor do aumento. Se o sal√°rio for maior que R$1.3000, o aumento √© de 10%. Se o sal√°rio for menor que R$1.3000, o aumento √© de 20%. O novo sal√°rio √© ent√£o calculado e exibido na tela. """

# Desenvolva um programa que leia o comprimento de tres retas e diga ao usuario se elas podem ou nao formar um triangulo.

# Leitura dos comprimentos das retas
a = float(input("Digite o comprimento da primeira reta: "))
b = float(input("Digite o comprimento da segunda reta: "))
c = float(input("Digite o comprimento da terceira reta: "))
# Verifica√ß√£o da condi√ß√£o de exist√™ncia de um tri√¢ngulo
if (a < b + c) and (b < a + c) and (c < a + b):
    print("As retas podem formar um tri√¢ngulo!")
else:
    print("As retas n√£o podem formar um tri√¢ngulo.")

""" Este programa solicita ao usu√°rio que informe o comprimento de tr√™s retas. Em seguida, ele verifica se essas retas satisfazem a condi√ß√£o de exist√™ncia de um tri√¢ngulo. Se a condi√ß√£o for verdadeira, o programa informa que as retas podem formar um tri√¢ngulo; caso contr√°rio, informa que as retas n√£o podem formar um tri√¢ngulo. """
